/*
 * To cLnge this license header, choose License Headers in Project Properties.
 * To cLnge this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ht;

import java.awt.HeadlessException;
import javax.swing.JOptionPane;

/**
 *
 * @author Mahmoud
 */
public class HashGUI extends javax.swing.JFrame {

    /**
     * Creates new form HashGUI
     */
    LinearProbe L = new LinearProbe(11);
    QuadraticProbes q = new QuadraticProbes(11);
    DoubleHashing d = new DoubleHashing(11);
    ScHach s = new ScHach(11);

    public HashGUI() {
        setLookAndFeel();
        initComponents();
        setLocationRelativeTo(null);

        hash.setVisible(true);
        OpAdLayer.setVisible(false);
        ScLayer.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        hash = new javax.swing.JLayeredPane();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        OpAdLayer = new javax.swing.JLayeredPane();
        insert = new javax.swing.JButton();
        NUm = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        find = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        ObSelec = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        dis = new javax.swing.JTextArea();
        Name = new javax.swing.JTextField();
        Numkey = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addr = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        ScLayer = new javax.swing.JLayeredPane();
        jLabel6 = new javax.swing.JLabel();
        NUmS = new javax.swing.JTextField();
        NameS = new javax.swing.JTextField();
        insertS = new javax.swing.JButton();
        findS = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        deleteS = new javax.swing.JButton();
        NumkeySC = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dis1 = new javax.swing.JTextArea();
        ObSelecS = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Open addressing");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Seperate Chaining");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hashLayout = new javax.swing.GroupLayout(hash);
        hash.setLayout(hashLayout);
        hashLayout.setHorizontalGroup(
            hashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hashLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jButton1)
                .addGap(40, 40, 40)
                .addComponent(jButton2)
                .addContainerGap(63, Short.MAX_VALUE))
        );
        hashLayout.setVerticalGroup(
            hashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hashLayout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addGroup(hashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(196, Short.MAX_VALUE))
        );
        hash.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hash.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        insert.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insert.setText("Insert");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        find.setText("Find");
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Chosee :");

        ObSelec.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Integer", "String", "Integer and String" }));
        ObSelec.setSelectedItem(null);
        ObSelec.setName(""); // NOI18N
        ObSelec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ObSelecActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setOpaque(false);

        dis.setEditable(false);
        dis.setColumns(20);
        dis.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        dis.setRows(5);
        jScrollPane1.setViewportView(dis);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("OR");

        jLabel2.setText("Enter :");

        jLabel4.setText("Key :");

        addr.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Linear Probing", "Quadratic Probing", "Double Hashing" }));
        addr.setSelectedItem(null);
        addr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addrActionPerformed(evt);
            }
        });

        jLabel5.setText("Open addressing");

        javax.swing.GroupLayout OpAdLayerLayout = new javax.swing.GroupLayout(OpAdLayer);
        OpAdLayer.setLayout(OpAdLayerLayout);
        OpAdLayerLayout.setHorizontalGroup(
            OpAdLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OpAdLayerLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(OpAdLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OpAdLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OpAdLayerLayout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ObSelec, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(OpAdLayerLayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(OpAdLayerLayout.createSequentialGroup()
                            .addGroup(OpAdLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(OpAdLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(NUm)
                                .addComponent(Numkey, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(OpAdLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(OpAdLayerLayout.createSequentialGroup()
                                    .addGap(34, 34, 34)
                                    .addComponent(delete)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel1)
                                    .addGap(12, 12, 12)
                                    .addComponent(find))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OpAdLayerLayout.createSequentialGroup()
                                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        OpAdLayerLayout.setVerticalGroup(
            OpAdLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OpAdLayerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OpAdLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ObSelec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(26, 26, 26)
                .addGroup(OpAdLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(49, 49, 49)
                .addGroup(OpAdLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NUm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insert)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(OpAdLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete)
                    .addComponent(Numkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(find)
                    .addComponent(jLabel4))
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );
        OpAdLayer.setLayer(insert, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(NUm, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(delete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(find, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(ObSelec, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(Name, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(Numkey, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(addr, javax.swing.JLayeredPane.DEFAULT_LAYER);
        OpAdLayer.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel6.setText("Enter :");

        insertS.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertS.setText("Insert");
        insertS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertSActionPerformed(evt);
            }
        });

        findS.setText("Find");
        findS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findSActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("OR");

        deleteS.setText("Delete");
        deleteS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSActionPerformed(evt);
            }
        });

        jLabel8.setText("Key :");

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane2.setOpaque(false);

        dis1.setEditable(false);
        dis1.setColumns(20);
        dis1.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        dis1.setRows(5);
        jScrollPane2.setViewportView(dis1);

        ObSelecS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Integer", "String", "Integer and String" }));
        ObSelecS.setSelectedItem(null);
        ObSelecS.setName(""); // NOI18N
        ObSelecS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ObSelecSActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Chosee :");

        javax.swing.GroupLayout ScLayerLayout = new javax.swing.GroupLayout(ScLayer);
        ScLayer.setLayout(ScLayerLayout);
        ScLayerLayout.setHorizontalGroup(
            ScLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ScLayerLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(ScLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ScLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ScLayerLayout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ObSelecS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(ScLayerLayout.createSequentialGroup()
                            .addGroup(ScLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ScLayerLayout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(NUmS, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(NameS, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(ScLayerLayout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(NumkeySC, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(27, 27, 27)
                                    .addComponent(deleteS)
                                    .addGap(15, 15, 15)))
                            .addGroup(ScLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(ScLayerLayout.createSequentialGroup()
                                    .addGap(13, 13, 13)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(findS))
                                .addGroup(ScLayerLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                                    .addComponent(insertS, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        ScLayerLayout.setVerticalGroup(
            ScLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ScLayerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ScLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ScLayerLayout.createSequentialGroup()
                        .addGroup(ScLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(NUmS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NameS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ScLayerLayout.createSequentialGroup()
                        .addGroup(ScLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ObSelecS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(35, 35, 35)
                        .addComponent(insertS)
                        .addGap(18, 18, 18)))
                .addGroup(ScLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findS)
                    .addComponent(jLabel7)
                    .addComponent(deleteS)
                    .addComponent(NumkeySC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(127, Short.MAX_VALUE))
        );
        ScLayer.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ScLayer.setLayer(NUmS, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ScLayer.setLayer(NameS, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ScLayer.setLayer(insertS, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ScLayer.setLayer(findS, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ScLayer.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ScLayer.setLayer(deleteS, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ScLayer.setLayer(NumkeySC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ScLayer.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ScLayer.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ScLayer.setLayer(ObSelecS, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ScLayer.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 466, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(hash, javax.swing.GroupLayout.Alignment.TRAILING))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(OpAdLayer, javax.swing.GroupLayout.Alignment.TRAILING))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ScLayer, javax.swing.GroupLayout.Alignment.TRAILING))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(hash))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(OpAdLayer))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ScLayer))
        );
        jLayeredPane1.setLayer(hash, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(OpAdLayer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(ScLayer, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 466, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        if (ObSelec.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Choose the Desired data type first");
        }
        if (ObSelec.getSelectedItem() != null && addr.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Choose addressing first");
        }

        try {

            if (ObSelec.getSelectedItem() == ObSelec.getItemAt(0)) {

                if (addr.getSelectedItem() == addr.getItemAt(0)) {
                    String k = NUm.getText();
                    int g = Integer.parseInt(k);
                    Data n = new Data(g);
                    L.insert(n);
                    L.displayTable();
                    dis.setText(L.out);
                    L.out = "";
                }
                if (addr.getSelectedItem() == addr.getItemAt(1)) {
                    String k = NUm.getText();
                    int g = Integer.parseInt(k);
                    Data n = new Data(g);
                    q.insert(n);
                    q.displayTable();
                    dis.setText(q.out);
                    q.out = "";

                }
                if (addr.getSelectedItem() == addr.getItemAt(2)) {
                    String k = NUm.getText();
                    int g = Integer.parseInt(k);
                    Data n = new Data(g);
                    int key = n.getNum();
                    d.insert(key, n);
                    d.displayTable();
                    dis.setText(d.out);
                    d.out = "";
                }

            }

            if (ObSelec.getSelectedItem() == ObSelec.getItemAt(1)) {

                if (addr.getSelectedItem() == addr.getItemAt(0)) {

                    String k = Name.getText();
                    try {
                        int m = Integer.parseInt(k);
                        JOptionPane.showMessageDialog(null, "Please Enter a Name");
                    } catch (NumberFormatException | HeadlessException e) {
                        Data n = new Data(k);
                        L.insert(n);
                        L.displayTable();
                        dis.setText(L.out);
                        L.out = "";
                    }
                }

                if (addr.getSelectedItem() == addr.getItemAt(1)) {
                    String k = Name.getText();
                    try {
                        int m = Integer.parseInt(k);
                        JOptionPane.showMessageDialog(null, "Please Enter a Name");
                    } catch (NumberFormatException | HeadlessException e) {
                        Data n = new Data(k);
                        q.insert(n);
                        q.displayTable();
                        dis.setText(q.out);
                        q.out = "";
                    }

                }

                if (addr.getSelectedItem() == addr.getItemAt(2)) {

                    String k = Name.getText();

                    try {
                        int m = Integer.parseInt(k);
                        JOptionPane.showMessageDialog(null, "Please Enter a Name");
                    } catch (NumberFormatException | HeadlessException e) {
                        Data n = new Data(k);
                        int key = n.getName().length();
                        d.insert(key, n);
                        d.displayTable();
                        dis.setText(d.out);
                        d.out = "";
                    }
                }

            }

            if (ObSelec.getSelectedItem() == ObSelec.getItemAt(2)) {

                if (addr.getSelectedItem() == addr.getItemAt(0)) {
                    String y = Name.getText();
                    String x = NUm.getText();
                    int m = Integer.parseInt(x);
                    try {
                        int l = Integer.parseInt(y);
                        JOptionPane.showMessageDialog(null, "Please Enter a correct Name and ID");
                    } catch (NumberFormatException ex) {
                        Data d = new Data(y, m);
                        L.insert(d);
                        L.displayTable();
                        dis.setText(L.out);
                        L.out = "";
                    }
                }

                if (addr.getSelectedItem() == addr.getItemAt(1)) {

                    String y = Name.getText();
                    String x = NUm.getText();
                    int m = Integer.parseInt(x);
                    try {
                        int l = Integer.parseInt(y);
                        JOptionPane.showMessageDialog(null, "Please Enter a correct Name and ID");
                    } catch (NumberFormatException ex) {
                        Data d = new Data(y, m);
                        q.insert(d);
                        q.displayTable();
                        dis.setText(q.out);
                        q.out = "";
                    }
                }

                if (addr.getSelectedItem() == addr.getItemAt(2)) {
                    String y = Name.getText();
                    String x = NUm.getText();
                    int m = Integer.parseInt(x);
                    try {
                        int l = Integer.parseInt(y);
                        JOptionPane.showMessageDialog(null, "Please Enter a correct Name and ID");
                    } catch (NumberFormatException ex) {

                        Data n = new Data(y, m);
                        int key = n.getNum();
                        d.insert(key, n);
                        d.displayTable();
                        dis.setText(d.out);
                        d.out = "";
                    }

                }

            }

        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(rootPane, "Can't do it ");
        }
    }//GEN-LAST:event_insertActionPerformed

    private void ObSelecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ObSelecActionPerformed
        if (ObSelec.getSelectedItem() == ObSelec.getItemAt(0)) {

            Name.setEnabled(false);
            NUm.setEnabled(true);

            L.clear();
            q.clear();
            d.clear();
            dis.setText(null);
        }
        if (ObSelec.getSelectedItem() == ObSelec.getItemAt(1)) {

            NUm.setEnabled(false);
            Name.setEnabled(true);
            L.clear();
            q.clear();
            d.clear();
            dis.setText(null);
        }
        if (ObSelec.getSelectedItem() == ObSelec.getItemAt(2)) {

            NUm.setEnabled(true);
            Name.setEnabled(true);
            L.clear();
            q.clear();
            d.clear();
            dis.setText(null);
        }
    }//GEN-LAST:event_ObSelecActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if (ObSelec.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Choose the Desired data type first");
        }
        if (ObSelec.getSelectedItem() != null && addr.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Choose addressing first");
        }
        if (ObSelec.getSelectedItem() == ObSelec.getItemAt(0)) {
            if (addr.getSelectedItem() == addr.getItemAt(0)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                L.delete(g);
                L.displayTable();
                dis.setText(L.out);
                L.out = "";
            }

            if (addr.getSelectedItem() == addr.getItemAt(1)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                q.delete(g);
                q.displayTable();
                dis.setText(q.out);
                q.out = "";
            }
            if (addr.getSelectedItem() == addr.getItemAt(2)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                d.delete(g);
                d.displayTable();
                dis.setText(d.out);
                d.out = "";
            }
        }
        if (ObSelec.getSelectedItem() == ObSelec.getItemAt(1)) {
            if (addr.getSelectedItem() == addr.getItemAt(0)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                L.delete(g);
                L.displayTable();
                dis.setText(L.out);
                L.out = "";
            }

            if (addr.getSelectedItem() == addr.getItemAt(1)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                q.delete(g);
                q.displayTable();
                dis.setText(q.out);
                q.out = "";
            }
            if (addr.getSelectedItem() == addr.getItemAt(2)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                d.delete(g);
                d.displayTable();
                dis.setText(d.out);
                d.out = "";
            }
        }

        if (ObSelec.getSelectedItem() == ObSelec.getItemAt(2)) {
            if (addr.getSelectedItem() == addr.getItemAt(0)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                L.delete(g);
                L.displayTable();
                dis.setText(L.out);
                L.out = "";
            }

            if (addr.getSelectedItem() == addr.getItemAt(1)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                q.delete(g);
                q.displayTable();
                dis.setText(q.out);
                q.out = "";
            }
            if (addr.getSelectedItem() == addr.getItemAt(2)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                d.delete(g);
                d.displayTable();
                dis.setText(d.out);
                d.out = "";
            }
        }


    }//GEN-LAST:event_deleteActionPerformed

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
        if (ObSelec.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Choose the Desired data type first");
        }
        if (ObSelec.getSelectedItem() != null && addr.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Choose addressing first");
        }
        if (ObSelec.getSelectedItem() == ObSelec.getItemAt(0)) {
            if (addr.getSelectedItem() == addr.getItemAt(0)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                L.find(g);

            }

            if (addr.getSelectedItem() == addr.getItemAt(1)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                q.find(g);

            }
            if (addr.getSelectedItem() == addr.getItemAt(2)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                d.find(g);

            }
        }
        if (ObSelec.getSelectedItem() == ObSelec.getItemAt(1)) {
            if (addr.getSelectedItem() == addr.getItemAt(0)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                L.find(g);

            }

            if (addr.getSelectedItem() == addr.getItemAt(1)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                q.find(g);

            }
            if (addr.getSelectedItem() == addr.getItemAt(2)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                d.find(g);

            }
        }

        if (ObSelec.getSelectedItem() == ObSelec.getItemAt(2)) {
            if (addr.getSelectedItem() == addr.getItemAt(0)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                L.find(g);

            }

            if (addr.getSelectedItem() == addr.getItemAt(1)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                q.find(g);

            }
            if (addr.getSelectedItem() == addr.getItemAt(2)) {
                String k = Numkey.getText();
                int g = Integer.parseInt(k);
                d.find(g);

            }
        }
    }//GEN-LAST:event_findActionPerformed

    private void addrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addrActionPerformed

        if (addr.getSelectedItem() == addr.getItemAt(0)) {
            L.clear();
            q.clear();
            d.clear();
            dis.setText(null);
            NUm.setText(null);
            Name.setText(null);

        }
        if (addr.getSelectedItem() == addr.getItemAt(1)) {
            L.clear();
            q.clear();
            d.clear();
            dis.setText(null);
            NUm.setText(null);
            Name.setText(null);
        }

        if (addr.getSelectedItem() == addr.getItemAt(2)) {
            L.clear();
            q.clear();
            d.clear();
            dis.setText(null);
            NUm.setText(null);
            Name.setText(null);
        }
    }//GEN-LAST:event_addrActionPerformed

    private void insertSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertSActionPerformed

        if (ObSelecS.getSelectedItem() == ObSelecS.getItemAt(0)) {
           String f = NUmS.getText();
            try {
                
                int g = Integer.parseInt(f);
                Data d = new Data(g);
                Link b = new Link(d);
                s.insert(b);
                s.displayTable();
                dis1.setText(s.Fout);
                s.Fout = "";
                for (int i = 0; i < s.arraySize; i++) {
                    s.hashArray[i].out = "";
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Please enter a number", null, JOptionPane.ERROR_MESSAGE);

            }

        }
        if (ObSelecS.getSelectedItem() == ObSelecS.getItemAt(1)) {
            String f = NameS.getText();
            try {

                int g = Integer.parseInt(f);
                JOptionPane.showMessageDialog(null, "Please Enter a Name");
            } catch (NumberFormatException | HeadlessException e) {
                Data d = new Data(f);
                Link b = new Link(d);
                s.insert(b);
                s.displayTable();
                dis1.setText(s.Fout);
                s.Fout = "";
                for (int i = 0; i < s.arraySize; i++) {
                    s.hashArray[i].out = "";
                }
            }
        }

        if (ObSelecS.getSelectedItem() == ObSelecS.getItemAt(2)) {
            String f = NameS.getText();
            String m = NUmS.getText();
            int o = Integer.parseInt(m);
            try {

                int g = Integer.parseInt(f);
                JOptionPane.showMessageDialog(null, "Please Enter a Name");
            } catch (NumberFormatException | HeadlessException e) {
                Data d = new Data(f, o);
                Link b = new Link(d);
                s.insert(b);
                s.displayTable();
                dis1.setText(s.Fout);
                s.Fout = "";
                for (int i = 0; i < s.arraySize; i++) {
                    s.hashArray[i].out = "";
                }
            }
        }


    }//GEN-LAST:event_insertSActionPerformed

    private void findSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findSActionPerformed
        if (ObSelecS.getSelectedItem() == ObSelecS.getItemAt(0)) {
            String f = NumkeySC.getText();
            int g = Integer.parseInt(f);
            s.find(g);

        }
        if (ObSelecS.getSelectedItem() == ObSelecS.getItemAt(1)) {
            String f = NumkeySC.getText();
            int g = Integer.parseInt(f);
            s.find(g);

        }

        if (ObSelecS.getSelectedItem() == ObSelecS.getItemAt(2)) {
            String f = NumkeySC.getText();
            int g = Integer.parseInt(f);
            s.find(g);

        }
    }//GEN-LAST:event_findSActionPerformed

    private void deleteSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSActionPerformed
        if (ObSelecS.getSelectedItem() == ObSelecS.getItemAt(0)) {
            String f = NumkeySC.getText();
            int g = Integer.parseInt(f);
            s.delete(g);
            s.displayTable();
            dis1.setText(s.Fout);
            s.Fout = "";
            for (int i = 0; i < s.arraySize; i++) {
                s.hashArray[i].out = "";
            }
        }
        if (ObSelecS.getSelectedItem() == ObSelecS.getItemAt(1)) {
            String f = NumkeySC.getText();
            int g = Integer.parseInt(f);
            s.delete(g);
            s.displayTable();
            dis1.setText(s.Fout);
            s.Fout = "";
            for (int i = 0; i < s.arraySize; i++) {
                s.hashArray[i].out = "";
            }
        }

        if (ObSelecS.getSelectedItem() == ObSelecS.getItemAt(2)) {
            String f = NumkeySC.getText();
            int g = Integer.parseInt(f);
            s.delete(g);
            s.displayTable();
            dis1.setText(s.Fout);
            s.Fout = "";
            for (int i = 0; i < s.arraySize; i++) {
                s.hashArray[i].out = "";
            }

        }
    }//GEN-LAST:event_deleteSActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        hash.setVisible(false);
        OpAdLayer.setVisible(true);
        ScLayer.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        hash.setVisible(false);
        ScLayer.setVisible(true);
        OpAdLayer.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ObSelecSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ObSelecSActionPerformed
        if (ObSelecS.getSelectedItem() == ObSelecS.getItemAt(0)) {
            NameS.setEnabled(false);
            NUmS.setEnabled(true);
            s.clear();
            dis1.setText(null);

        }
        if (ObSelecS.getSelectedItem() == ObSelecS.getItemAt(1)) {
            NUmS.setEnabled(false);
            NameS.setEnabled(true);
            s.clear();
            dis1.setText(null);

        }
        if (ObSelecS.getSelectedItem() == ObSelecS.getItemAt(2)) {
            NUmS.setEnabled(true);
            NameS.setEnabled(true);
            s.clear();
            dis1.setText(null);

        }
    }//GEN-LAST:event_ObSelecSActionPerformed

    public void setLookAndFeel() {
        try {

            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());

                    break;
                }

            }

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HashGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HashGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField NUm;
    public javax.swing.JTextField NUmS;
    public javax.swing.JTextField Name;
    public javax.swing.JTextField NameS;
    private javax.swing.JTextField Numkey;
    private javax.swing.JTextField NumkeySC;
    private javax.swing.JComboBox ObSelec;
    private javax.swing.JComboBox ObSelecS;
    public javax.swing.JLayeredPane OpAdLayer;
    public javax.swing.JLayeredPane ScLayer;
    private javax.swing.JComboBox addr;
    private javax.swing.JButton delete;
    private javax.swing.JButton deleteS;
    private javax.swing.JTextArea dis;
    private javax.swing.JTextArea dis1;
    private javax.swing.JButton find;
    private javax.swing.JButton findS;
    public javax.swing.JLayeredPane hash;
    private javax.swing.JButton insert;
    private javax.swing.JButton insertS;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
